#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# This workflow will build a Java project with Maven
# See also:
#   https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on:
  workflow_call:
    # To enable manual trigger

  push:
    branches:
      - master

jobs:
  mvn:
    strategy:
      matrix:
        profile:
          - name: 'full-build-jdk8'
            jdk: 8
            args: '-Pfull-build -DskipTests'
      fail-fast: false
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
    # Setup environment using SafeDep pacman
    - uses: actions/checkout@v3
      name: Checkout SafeDep Pacman
      with:
        repository: 'safedep/pacman'
        path: .safedep/pacman
        fetch-depth: 0
    - name: Configure environment with Pacman
      run: ./pacman configure-from-env && ./pacman.sh setup-maven
      env:
        GATEWAY_URL: ${{ secrets.GATEWAY_URL }}
        GATEWAY_USERNAME: ${{ secrets.GATEWAY_USERNAME }}
        GATEWAY_PASSWORD: ${{ secrets.GATEWAY_PASSWORD }}
        GATEWAY_PROJECT_ID: ${{ github.event.repository.name }}


    # Checkout source code and run build
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.profile.jdk }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.profile.jdk }}
    - name: Install C Dependencies
      run: sudo apt-get install libcppunit-dev libsasl2-dev
    - name: Build with Maven (${{ matrix.profile.name }})
      run: mvn -B -V -e -ntp "-Dstyle.color=always" ${{ matrix.profile.args }}
      env:
        MAVEN_OPTS: -Djansi.force=true

